{"version":3,"sources":["./src/app/services/authActivator.service.ts","./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/login.component.html","./src/app/pages/loginPage.component.ts","./src/app/app.module.ts","./src/app/pages/checkout.component.ts","./src/app/pages/checkout.component.html","./src/app/router/index.ts","./src/app/pages/shopPage.component.ts","./src/app/pages/shopPage.component.html","./src/app/shared/Order.ts","./src/app/views/cartView.component.html","./src/app/views/cartView.component.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"./store.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(private store: Store, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        if (this.store.loginRequired) {\r\n            this.router.navigate([\"login\"])\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { LoginRequest, LoginResults } from \"../shared/LoginResults\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\nimport { Product } from \"../shared/Product\";\r\n\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public products: Product[] = [];\r\n\r\n    public order: Order = new Order();\r\n\r\n    public token: string;\r\n    public expiration = new Date();\r\n\r\n\r\n    checkout() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", 'Bearer ${this.token}')\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: headers\r\n        })\r\n            .pipe(map(() => {\r\n                this.order = new Order();\r\n            }));\r\n    }\r\n\r\n    get loginRequired(): boolean{\r\n        return this.token.length === 0 || this.expiration > new Date();\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResults>(\"/account/createtoken\", creds)\r\n            .pipe(map(data => {\r\n                this.token = data.token;\r\n                this.expiration = data.expiration;\r\n            }));\r\n    }\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<[]>(\"/api/products\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n    addToOrder(product: Product) {\r\n\r\n        let item: OrderItem;\r\n\r\n        item = this.order.items.find(x => x.productId === product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n        const item = new OrderItem();\r\n        item.productId = product.id;\r\n        item.productTitle = product.title;\r\n        item.productArtId = product.artId;\r\n        item.productArtist = product.artist;\r\n        item.productCategory = product.category;\r\n        item.productSize = product.size;\r\n        item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n        this.order.items.push(item);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}","import { Component } from '@angular/core';\n\n@Component({\n    //the selector property is the element that this component is going to try to render into..\n  //selector: 'app-root',\n    selector: 'the-shop',\n    //renamed this to templateUrl instead of just template; will make it easier to figure out endpoints later on....\n  templateUrl:\"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n    //this is just a property that can be selected with the double handlebar {{}} syntax, just like using @ in DNC\n  //title = 'client';\n  title = 'Shop';\n}\n","\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3> {{title}}</h3>\r\n        <product-List></product-List>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n    <!--<div class=\"col-3\">-->\r\n\r\n        <!--<cart></cart>-->\r\n    <!--</div>-->\r\n</div>\r\n\r\n","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n      <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"creds.username\" required/>\n          <!--<div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Required</div>-->\n      </div>\n      <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" required />\n<!--          <div class=\"text-danger\" *ngIf=\"creds.password.touched && creds.password.errors.required\">Required</div>-->\n      </div>\n      <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"username.invalid\" />\n        <a href=\"#\" class=\"btn btn-default\">Cancel</a>\n      </div>\n    </form>\n      {{creds}}\n  </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\nexport class LoginPage {\r\n    constructor(public store: Store, private router: Router) { }\r\n\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.store.login(this.creds)\r\n            .subscribe(() => {\r\n                //successfully logged in\r\n                if (this.store.order.items.length > 0) {\r\n                    this.router.navigate([\"checkout\"]);\r\n                }\r\n                else {\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            }, error => {\r\n                console.log(error);\r\n                this.errorMessage = \"Failed to login\";\r\n            }\r\n\r\n                )\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.service';\r\nimport { Checkout } from './pages/checkout.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductListView,\r\n        CartView,\r\n        ShopPage,\r\n        Checkout,\r\n        LoginPage\r\n    ],\r\n    //this is where you can add other \"bundles\".. just like the _imports in blazor, just make sure to add the import statement above\r\n    //as intellisense is kind of iffy on this\r\n  imports: [\r\n      BrowserModule,\r\n      //this lets you make http requests.. to apis..\r\n      HttpClientModule,\r\n      //access to our routing module..\r\n      router,\r\n      //2 way data binding for forms..\r\n      FormsModule\r\n    ],\r\n  //this is where you put the injectable services\r\n    providers: [\r\n        Store,\r\n        AuthActivator\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\r\n//import { DataService } from '../shared/dataService';\nimport { Store } from \"../services/store.service\";\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n    constructor(public store: Store, private router: Router) { }\n\n    public errorMessage = \"\";\n\n    onCheckout() {\n      this.errorMessage = \"\";\n\n      this.store.checkout()\n          .subscribe(() => {\n              this.router.navigate([\".\"]);\r\n          }, err => {\n              this.errorMessage = \"Failed to checkout: ${err}\";\r\n          }\n          );\n  }\n}","<div class=\"row\">\n  <!--<h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of data.order.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-condensed\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>-->\n        <!--<td class=\"text-right\">{{order.subtotal|currency:'USD':true }}</td>-->\n      <!--</tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>-->\n        <!--<td class=\"text-right\">{{ order.subtotal|currency:'USD':true }}</td>-->\n      <!--</tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>-->\n\n</div>","import { RouterModule } from \"@angular/router\";\r\nimport { LoginPage } from \"../pages/loginPage.component\";\r\nimport { Checkout } from \"../pages/checkout.component\";\r\nimport { ShopPage } from \"../pages/shopPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator.service\";\r\n\r\nconst routes = [{\r\n    path: \"\", component: ShopPage},\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"checkout\", component: Checkout, canActivate: [AuthActivator] },\r\n{ path: \"**\", redirectTo: \"/\" }\r\n    \r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, {\r\n    useHash: false\r\n});\r\n\r\nexport default router;","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"shop-page\",\r\n    templateUrl:\"shopPage.component.html\"\r\n\r\n})\r\nexport class ShopPage {\r\n\r\n}","\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <!--<product-List></product-List>-->\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>\r\n\r\n","\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId;\r\n}\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string = Math.random().toString();\r\n    items: OrderItem[] = [];\r\n\r\n    get subtotal(): number {\r\n\r\n        const result = this.items.reduce(\r\n            (tot, val) => {\r\n                return tot + (val.unitPrice * val.quantity);\r\n        }, 0);\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n}","\r\n<h3>Cart</h3>\r\n<div>\r\n    Count:  {{store.order.items.length}}\r\n    <table class=\"table table-condensed table-striped\">\r\n        <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Total</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of store.order.items\">\r\n                <td>\r\n                    <img src=\"/img/{{item.productArtId}}.jpg\" alt=\"{{item.productArtist}}\"\r\n                         class=\"img-fluid product-thumb\" />\r\n                </td>\r\n                <td>{{ item.productCategory}}</td>\r\n                <td>{{ item.quantity}}</td>\r\n                <td>{{ item.unitPrice | currency}}</td>\r\n                <td>{{ item.unitPrice * item.quantity | currency}}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <td colspan=\"5\">\r\n                    <strong>Subtotal: {{store.order.subtotal | currency}}</strong>\r\n                </td>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n    <a class=\"btn btn-success\" routerLink=\"checkout\" *ngIf=\"store.order.items.length > 0\"></a>\r\n</div>\r\n<hr />","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls:[\"cartView.component.css\"]\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n\r\n\r\n}","\r\n\r\n<div class=\"row\">\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid product-image\" alt=\"{{p.title}}\" />\r\n            <h5>{{p.category}} - {{p.size}}</h5>\r\n            <ul class=\"products-props\">\r\n                <li>\r\n                    Price: {{p.price | currency}}\r\n                </li>\r\n                <li>Artist: {{p.artist}}</li>\r\n                <li>Title: {{p.title}}</li>\r\n                <li>{{p.artDescription}}</li>\r\n            </ul>\r\n            <button class=\"btn btn-success\" id=\"buyButton\" (click)=\"store.addToOrder(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"product-List\",\r\n    templateUrl: \"productListView.component.html\",\r\n    //css files scoped just to this part of the view\r\n    styleUrls: [\"productListView.component.css\"]\r\n    \r\n})\r\n\r\nexport default class ProductListView implements OnInit {\r\n\r\n\r\n    constructor(public store: Store) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(); // this 'subscribe' actually kicks off the operation\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}